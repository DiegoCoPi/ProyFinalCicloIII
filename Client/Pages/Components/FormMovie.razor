@using proyFinal.Client.Model

<EditForm Model="Movie" OnValidSubmit="OnDataAnnotationsValidated">
    <DataAnnotationsValidator></DataAnnotationsValidator>

    <div class="container">
        <div class="jumbotron">
            <div class="form-group">
                <div class="row">
                    <div class="col col-sm-9">
                        @* Input para ingresar el nombre de la pelicula *@
                        <InputText class="form-control" @bind-Value="@Movie.Name" placeholder="Nombre de la película">
                        </InputText>
                        <ValidationMessage For="@(()=>Movie.Name)"></ValidationMessage>
                    </div>
                    <div class="col col-sm-3">
                        @* Checkbox para definir si esta o no en cartelera *@
                        <InputCheckbox id="en_cartelera" class="form-check-input" @bind-Value="@Movie.EnCartelera">
                        </InputCheckbox>
                        <label class="form-check-label" for="en_cartelera">En cartelera</label>
                        <ValidationMessage For="@(()=>Movie.EnCartelera)"></ValidationMessage>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="row">
                    <div class="col">
                        @* Input para ingresar el trailer *@
                        <InputText class="form-control" @bind-Value="@Movie.Trailer" placeholder="Trailer"></InputText>
                        <ValidationMessage For="@(()=>Movie.Trailer)"></ValidationMessage>
                    </div>
                    <div class="col">
                        <div class="form-group">
                            @* Fecha de lanzamiento*@
                            <InputDate class="form-control" @bind-Value="@Movie.Premier"></InputDate>
                            <ValidationMessage For="@(()=>Movie.Premier)"></ValidationMessage>
                        </div>
                    </div>
                </div>
            </div>
            @* Sinopsis de la pelicula... descripción *@
            <div class="form-group">
                <InputTextArea class="form-control" @bind-Value="@Movie.Sinopsis" placeholder="Sinopsis
                 de la película"></InputTextArea>
                <ValidationMessage For="@(()=>Movie.Sinopsis)"></ValidationMessage>
            </div>
            @* Selección de categorías *@
            <div class="form-group">
                <div class="row">
                    <div class="col">
                        <label>Selecciona las categorías</label>
                        <div>
                            <SelectorMultiple Seleccionados="Seleccionados" NoSeleccionados="NoSeleccionados">
                            </SelectorMultiple>
                        </div>
                    </div>
                    <div class="col">
                        @* Poster => Imagen de la pelicula *@
                        <div class="form-group">
                            <ImageComponent Label="" ImageSelected="ImageSelected" ImageURL=""></ImageComponent>
                        </div>
                    </div>

                    <div class="form-group">
                        <label>Actores:</label>
                        <div>
                            <SelectorMultipleTypeaHead Context="actor" SearchMethod="BuscarActores"
                                ElementosSeleccionados="ActoresSeleccionados">
                                <MyListTemplate>
                                    <img style="width: 30px" src="@actor.Photo" />
                                    @actor.Name/<input type="text" placeholder="Personaje" @bind="actor.Character"/>
                                </MyListTemplate>
                                <MyResultTemplate>
                                    <img style="width: 30px" src="@actor.Photo" />
                                    @actor.Name
                                </MyResultTemplate>
                            </SelectorMultipleTypeaHead>
                        </div>
                    </div>
                </div>

            </div>
            <button type="submit" class="btn btn-success">Aceptar</button>
            <button type="submit" class="btn btn-danger">Cancelar</button>

        </div>
    </div>
</EditForm>
@code {
    [Parameter] public Movie Movie { get; set; }
    [Parameter] public EventCallback OnValidSubmit { get; set; }
    [Parameter] public List<Category> CategoriasSeleccionadas { get; set; } = new List<Category>();
    [Parameter] public List<Category> CategoriasNoSeleccionadas { get; set; } = new List<Category>();
    [Parameter] public List<Actor> ActoresSeleccionados { get; set; } = new List<Actor>();
    private string posterTemporal;
    private List<SelectorMultipleModel> NoSeleccionados { get; set; } = new List<SelectorMultipleModel>();
    private List<SelectorMultipleModel> Seleccionados { get; set; } = new List<SelectorMultipleModel>();
    private void ImageSelected(string imageB64)
    {
        Movie.Poster = imageB64;
    }
    protected override void OnInitialized()
    {
        Seleccionados = CategoriasSeleccionadas.Select(x => new SelectorMultipleModel(x.Id.ToString(), x.Name)).ToList();
        NoSeleccionados = CategoriasNoSeleccionadas.Select(x => new SelectorMultipleModel(x.Id.ToString(), x.Name)).ToList();
        if (!string.IsNullOrWhiteSpace(Movie.Poster))
        {
            posterTemporal = Movie.Poster;
            Movie.Poster = null;
        }
    }
    private async Task<IEnumerable<Actor>> BuscarActores(string searchText)
    {
        return new List<Actor>(){
new Actor(){Id=1, Name="Yaneth Mejía", Photo
="https://pbs.twimg.com/profile_images/1079060744891785216/dAsFSbHH_400x400.jpg"},
new Actor(){Id=2, Name="Carolina Marquez", Photo
="https://archivo.autonoma.edu.co/sites/default/files/styles/medium/public/carolina-marquez-narvaez.jpg?itok=CcL43PAR"},
new Actor(){Id=3, Name="Juan Esteban", Photo
="https://cdn1.vectorstock.com/i/1000x1000/29/65/cinema-award-best-actor-flat-style-vector-13602965.jpg"}
};
    }

private async Task OnDataAnnotationsValidated(){
    Movie.CategoriesMovie = Seleccionados.Select(x => new CategoryMovie{CategoryId= int.Parse(x.Key)}).ToList();
    Movie.MoviesActor = ActoresSeleccionados.Select(x =>new MovieActor{ActorId = x.Id, Character = x.Character}).ToList();
    if(!string.IsNullOrWhiteSpace(Movie.Poster)){
        posterTemporal = null;
    }
    await OnValidSubmit.InvokeAsync(null);
}
}